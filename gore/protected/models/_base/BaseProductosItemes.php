<?php

/**
 * This is the model base class for the table "productos_itemes".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ProductosItemes".
 *
 * Columns in table "productos_itemes" available as properties of the model,
 * followed by relations of table "productos_itemes" available as properties of the model.
 *
 * @property integer $centro_costo_id
 * @property integer $item_presupuestario_id
 * @property integer $monto
 * @property integer $planificacion_id
 *
 * @property ItemesPresupuestarios $itemPresupuestario
 * @property CentrosCostos $centroCosto
 * @property Planificaciones $planificacion
 */
abstract class BaseProductosItemes extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'productos_itemes';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Productos Itemes|Productos Itemes', $n);
	}

	public static function representingColumn() {
		return array(
			'centro_costo_id',
			'item_presupuestario_id',
			'planificacion_id',
		);
	}

	public function rules() {
		return array(
			array('centro_costo_id, item_presupuestario_id, monto, planificacion_id', 'required'),
			array('centro_costo_id, item_presupuestario_id, monto, planificacion_id', 'numerical', 'integerOnly'=>true),
			array('centro_costo_id, item_presupuestario_id, monto, planificacion_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'itemPresupuestario' => array(self::BELONGS_TO, 'ItemesPresupuestarios', 'item_presupuestario_id'),
			'centroCosto' => array(self::BELONGS_TO, 'CentrosCostos', 'centro_costo_id'),
			'planificacion' => array(self::BELONGS_TO, 'Planificaciones', 'planificacion_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'centro_costo_id' => null,
			'item_presupuestario_id' => null,
			'monto' => Yii::t('app', 'Monto'),
			'planificacion_id' => null,
			'itemPresupuestario' => null,
			'centroCosto' => null,
			'planificacion' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('centro_costo_id', $this->centro_costo_id);
		$criteria->compare('item_presupuestario_id', $this->item_presupuestario_id);
		$criteria->compare('monto', $this->monto);
		$criteria->compare('planificacion_id', $this->planificacion_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
	
	public function buscarmontoporproductoitem($productoestrategico_id,$idcentrocosto) {
		$criteria = new CDbCriteria;
	
		$criteria->compare('centro_costo_id', $this->centro_costo_id);
		$criteria->compare('item_presupuestario_id', $this->item_presupuestario_id);
		$criteria->compare('monto', $this->monto);
		$criteria->compare('planificacion_id', $this->planificacion_id);
		$idPlanificacion = Planificaciones::model()->findAll(array('condition'=>'pp.id='.Yii::app()->session['idPeriodo'], 'join'=>'join periodos_procesos pp on t.periodo_proceso_id=pp.id'));
		$idPlanificacion=$idPlanificacion[0]->id;
		if(isset(Yii::app()->session['idPeriodo'])){
			$criteria->join='
					INNER JOIN producto_estrategico_centro_costo pecc ON t.centro_costo_id = pecc.centro_costo_id
					INNER JOIN productos_estrategicos pes ON pecc.producto_estrategico_id = pes.id';
			$criteria->distinct =true;
			$criteria->select='t.*';
			$criteria->condition='pes.id='.$productoestrategico_id.' AND t.planificacion_id='.$idPlanificacion.' AND t.centro_costo_id='.$idcentrocosto;
		}else{
			$criteria->condition='t.monto=0';
		}
		
		$montoproductoitem = ProductosItemes::model()->findAll($criteria);
		
		return $montoproductoitem;
	}
}