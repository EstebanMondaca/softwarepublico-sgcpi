<?php

/**
 * This is the model base class for the table "productos_estrategicos".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ProductosEstrategicos".
 *
 * Columns in table "productos_estrategicos" available as properties of the model,
 * followed by relations of table "productos_estrategicos" available as properties of the model.
 *
 * @property integer $id
 * @property integer $tipo_producto_id
 * @property integer $division_id
 * @property string $nombre
 * @property string $descripcion
 * @property integer $gestion_territorial
 * @property integer $desagregado_sexo
 * @property integer $estado
 *
 * @property ObjetivosEstrategicos[] $objetivosEstrategicoses
 * @property Clientes[] $clientes
 * @property Divisiones $division
 * @property TiposProductos $tipoProducto
 * @property ItemesPresupuestarios[] $itemesPresupuestarioses
 * @property Subproductos[] $subproductoses
 */
abstract class BaseProductosEstrategicos extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'productos_estrategicos';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Productos Estratégicos|Productos Estratégicos', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules(){
		return array(
			array('nombre, descripcion, gestion_territorial, division_id,desagregado_sexo,clientes,objetivosEstrategicoses, estado', 'required'),//,clientes,objetivosEstrategicoses
			array('desagregado_sexo_descripcion','descripcionsexo_required'),
			array('gestion_territorial_descripcion','descripcionterritorio_required'),
			array('orden,tipo_producto_id, division_id, gestion_territorial, desagregado_sexo, estado, orden', 'numerical', 'integerOnly'=>true),
			array('nombre', 'length', 'max'=>200),
			array('nombre_corto', 'length', 'max'=>20),
			array('desagregado_sexo_descripcion, gestion_territorial_descripcion', 'safe'),
			array('tipo_producto_id, division_id,desagregado_sexo_descripcion, gestion_territorial_descripcion', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, tipo_producto_id, division_id, nombre, descripcion, gestion_territorial, desagregado_sexo, estado, desagregado_sexo_descripcion, gestion_territorial_descripcion,nombre_corto,orden', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'objetivosEstrategicoses' => array(self::MANY_MANY, 'ObjetivosEstrategicos', 'objetivos_productos(producto_estrategico_id, objetivo_estrategico_id)'),
			'clientes' => array(self::MANY_MANY, 'Clientes', 'productos_clientes(producto_estrategico_id, cliente_id)'),
			'division' => array(self::BELONGS_TO, 'Divisiones', 'division_id','condition'=>'division.estado=1'),
			'tipoProducto' => array(self::BELONGS_TO, 'TiposProductos', 'tipo_producto_id'),
			//'itemesPresupuestarioses' => array(self::MANY_MANY, 'ItemesPresupuestarios', 'productos_itemes(producto_estrategico_id, item_presupuestario_id)'),
			'subproductoses' => array(self::HAS_MANY, 'Subproductos', 'producto_estrategico_id','condition'=>'subproductoses.estado=1'),
			'centrosCostoses' => array(self::MANY_MANY, 'CentrosCostos', 'producto_estrategico_centro_costo(producto_estrategico_id, centro_costo_id)'),
		    'lineasAccions' => array(self::HAS_MANY, 'LineasAccion', 'producto_estrategico_id','condition'=>'lineasAccions.estado=1'),
        );
	}

	public function pivotModels() {
		return array(
			'objetivosEstrategicoses' => 'ObjetivosProductos',
			'clientes' => 'ProductosClientes',
			'centrosCostoses' => 'ProductoEstrategicoCentroCosto',
		);
	}

	public function attributeLabels(){
		return array(
			'id' => Yii::t('app', 'ID'),
			'tipo_producto_id' => null,
			'division_id' => 'Centro de responsabilidad',
			'nombre' => Yii::t('app', 'Producto estratégico'),
			'descripcion' => Yii::t('app', 'Descripción'),
			'gestion_territorial' => Yii::t('app', 'Gestión Territorial'),
			'desagregado_sexo' => Yii::t('app', 'Desagregación por Sexo'),
			'desagregado_sexo_descripcion' => Yii::t('app', '¿Cómo aplica?'),
            'gestion_territorial_descripcion' => Yii::t('app', '¿Cómo aplica?'),
			'estado' => Yii::t('app', 'Estado'),
			'objetivosEstrategicoses' => 'Objetivo estratégico vinculado',
			'clientes' => 'Clientes',
			'division' => 'Centro de responsabilidad',
			'nombre_corto' => 'Título en la Cadena de Valor',
			'orden' => 'Criterio de Orden',
			'tipoProducto' => null,
			'itemesPresupuestarioses' => null,
			'subproductoses' => null,
			'centrosCostoses' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('tipo_producto_id', $this->tipo_producto_id);
		$criteria->compare('division_id', $this->division_id);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('descripcion', $this->descripcion, true);
		$criteria->compare('gestion_territorial', $this->gestion_territorial);
		$criteria->compare('desagregado_sexo', $this->desagregado_sexo);
		$criteria->compare('estado', 1);
        $criteria->compare('desagregado_sexo_descripcion', $this->desagregado_sexo_descripcion, true);
        $criteria->compare('gestion_territorial_descripcion', $this->gestion_territorial_descripcion, true);
        if(isset(Yii::app()->session['idPeriodo']) && isset($_GET['id'])){
            $criteria->join='                    
                    INNER JOIN objetivos_productos op ON t.id = op.producto_estrategico_id
                    INNER JOIN objetivos_estrategicos oe ON op.objetivo_estrategico_id = oe.id
                    INNER JOIN desafios_objetivos do2 ON  oe.id = do2.objetivo_estrategico_id
                    INNER JOIN desafios_estrategicos de ON do2.desafio_estrategico_id = de.id
                    INNER JOIN planificaciones pl ON de.planificacion_id = pl.id 
                    INNER JOIN periodos_procesos pp ON pl.periodo_proceso_id = pp.id';
            $criteria->distinct =true;
            $criteria->select='t.*';            
            $criteria->condition='pp.id = '.Yii::app()->session['idPeriodo'].' AND t.estado = 1 AND tipo_producto_id='.$_GET['id'];
            $criteria->order = 'orden ASC';
        }else{
            $criteria->condition='t.id=0';
        }
		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
	
	public function searchOrden() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('estado', 1);
        if(isset(Yii::app()->session['idPeriodo']) && isset($_GET['id'])){
            $criteria->join='                    
                    INNER JOIN objetivos_productos op ON t.id = op.producto_estrategico_id
                    INNER JOIN objetivos_estrategicos oe ON op.objetivo_estrategico_id = oe.id
                    INNER JOIN desafios_objetivos do2 ON  oe.id = do2.objetivo_estrategico_id
                    INNER JOIN desafios_estrategicos de ON do2.desafio_estrategico_id = de.id
                    INNER JOIN planificaciones pl ON de.planificacion_id = pl.id 
                    INNER JOIN periodos_procesos pp ON pl.periodo_proceso_id = pp.id';
            $criteria->distinct =true;
            $criteria->select='t.*';            
            $criteria->condition='pp.id = '.Yii::app()->session['idPeriodo'].' AND t.estado = 1 AND tipo_producto_id='.$_GET['id'];
            $criteria->order = 'orden ASC';
        }else{
            $criteria->condition='t.id=0';
        }
		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}


    public function descripcionsexo_required($attribute_name, $params){
       if ($this->desagregado_sexo ==1 && empty($this->desagregado_sexo_descripcion)) {
            $this->addError('desagregado_sexo_descripcion', '¿Cómo aplica? no puede ser nulo.');
            return false;
        }
        return true; 
    }
    
    public function descripcionterritorio_required($attribute_name, $params){
       if ($this->gestion_territorial ==1 && empty($this->gestion_territorial_descripcion)) {
            $this->addError('gestion_territorial_descripcion', '¿Cómo aplica? no puede ser nulo.');
            return false;
        }
        return true; 
    } 

    public static function productosEstrategicosFiltroReporteAvanceIndicadores($idTipo, $idCR, $idCC){
    	
    	$join ='';
    	$condicion = '';
    	$criteria = new CDbCriteria;
    	$criteria->select = 't.*';
    	
    	if($idTipo != 0){//si vissene el tipo de producto para filtrar
    		$join = $join.' INNER JOIN tipos_productos tp ON t.tipo_producto_id = tp.id';
    		
    		if($condicion == ''){
    			$condicion = $condicion.' tp.id='.$idTipo;
    		}else{
    			$condicion = $condicion.' AND tp.id='.$idTipo;
    		}
    	}
    	
    	if($idCR != 0 && $idCC != 0){//si vienen los dos filtros
    		$join = $join.' INNER JOIN divisiones d ON d.id = t.division_id
    					    INNER JOIN centros_costos cc ON cc.division_id = d.id';
    		if($condicion == ''){
    			$condicion = $condicion.' d.id='.$idCR.' AND cc.id='.$idCC;
    		}else{
    			$condicion = $condicion.' AND d.id='.$idCR.' AND cc.id='.$idCC;
    		}
    	}
    	
    	if($idCR != 0 && $idCC == 0){
    		$join = $join.' INNER JOIN divisiones d ON d.id = t.division_id';
    		
    		if($condicion == ''){
    			$condicion = $condicion.' d.id='.$idCR;
    		}
    		else{
    			$condicion = $condicion.' AND d.id='.$idCR;
    		}
    	}
    	
    	if($idCR == 0 && $idCC != 0){
    		
    		$join = $join.' INNER JOIN divisiones d ON d.id = t.division_id
    					    INNER JOIN centros_costos cc ON cc.division_id = d.id';
    		if($condicion == ''){
    			$condicion = $condicion.' cc.id='.$idCC;
    		}else{
    			$condicion = $condicion.' AND cc.id='.$idCC;
    		}
    	}

    	if($condicion != ''){
    		$condicion = $condicion.' AND t.estado = 1';
    	}else{
    		$condicion = $condicion.'t.estado = 1';
    	}
    	
    	//validando periodo
    	if(isset(Yii::app()->session['idPeriodo'])){
    		$join=$join.' 
                    INNER JOIN objetivos_productos op ON t.id = op.producto_estrategico_id
                    INNER JOIN objetivos_estrategicos oe ON op.objetivo_estrategico_id = oe.id
                    INNER JOIN desafios_objetivos do2 ON  oe.id = do2.objetivo_estrategico_id
                    INNER JOIN desafios_estrategicos de ON do2.desafio_estrategico_id = de.id
                    INNER JOIN planificaciones pl ON de.planificacion_id = pl.id
                    INNER JOIN periodos_procesos pp ON pl.periodo_proceso_id = pp.id';
    	
    		if($condicion != ''){
    			$condicion=$condicion.' AND pp.id = '.Yii::app()->session['idPeriodo'];
    		}else{
    			$condicion=$condicion.' pp.id = '.Yii::app()->session['idPeriodo'];
    		}
    	}
    	
    	//////////////////
    	
    	$criteria->join = $join;
    	$criteria->condition = $condicion;
    	$criteria->group = 't.id';
    	$productos = ProductosEstrategicos::model()->findAll($criteria);
    
    	return $productos; 	
    	
    }
    
    public function productosEstrategicosporindicador($id){
    
    	$criteria = new CDbCriteria;
    	$criteria->compare('nombre', $this->nombre, true);
    	 
    	$criteria->select = 't.nombre';
    	$criteria->join ='INNER JOIN subproductos sp ON  t.id = sp.producto_estrategico_id
    			INNER JOIN productos_especificos pe ON sp.id = pe.subproducto_id
    			INNER JOIN indicadores i ON pe.id = i.producto_especifico_id';
    	$condicion= 'i.id='.$id;
    	$criteria->addCondition($condicion);
    	$productos = ProductosEstrategicos::model()->findAll($criteria);
    
    	return $productos;
    }
    
    public function productosestrategicosporObjetivosestrategicosytipoproducto($id_objetivoEstrategico,$tipoproducto) {
    	$criteria = new CDbCriteria;
    
    	$criteria->compare('id', $this->id);
    	$criteria->compare('tipo_producto_id', $this->tipo_producto_id);
    	$criteria->compare('nombre', $this->nombre, true);
    	$criteria->compare('descripcion', $this->descripcion, true);
    	$criteria->compare('estado', 1);

    	if(isset(Yii::app()->session['idPeriodo'])){
    		$criteria->join='
                    INNER JOIN objetivos_productos op ON t.id = op.producto_estrategico_id
                    INNER JOIN objetivos_estrategicos oe ON op.objetivo_estrategico_id = oe.id
                    INNER JOIN desafios_objetivos do2 ON  oe.id = do2.objetivo_estrategico_id
                    INNER JOIN desafios_estrategicos de ON do2.desafio_estrategico_id = de.id
                    INNER JOIN planificaciones pl ON de.planificacion_id = pl.id
                    INNER JOIN periodos_procesos pp ON pl.periodo_proceso_id = pp.id';
    		$criteria->distinct =true;
    		$criteria->select='t.*';
    		$criteria->condition='pp.id = '.Yii::app()->session['idPeriodo'].' AND t.estado = 1 AND oe.id='.$id_objetivoEstrategico.' AND t.tipo_producto_id='.$tipoproducto;
    
    	}else{
    		$criteria->condition='t.id=0';
    	}
    	
    	$productosestrategicos = ProductosEstrategicos::model()->findAll($criteria);
    
    	return $productosestrategicos;
    }

    
    
    public function productosestrategicosportipoproducto($tipoproducto) {
    	$criteria = new CDbCriteria;
    
    	$criteria->compare('id', $this->id);
    	$criteria->compare('tipo_producto_id', $this->tipo_producto_id);
    	$criteria->compare('nombre', $this->nombre, true);
    	$criteria->compare('descripcion', $this->descripcion, true);
    	$criteria->compare('estado', 1);
    
    	if(isset(Yii::app()->session['idPeriodo'])){
    		$criteria->join='
                    INNER JOIN objetivos_productos op ON t.id = op.producto_estrategico_id
                    INNER JOIN objetivos_estrategicos oe ON op.objetivo_estrategico_id = oe.id
                    INNER JOIN desafios_objetivos do2 ON  oe.id = do2.objetivo_estrategico_id
                    INNER JOIN desafios_estrategicos de ON do2.desafio_estrategico_id = de.id
                    INNER JOIN planificaciones pl ON de.planificacion_id = pl.id
                    INNER JOIN periodos_procesos pp ON pl.periodo_proceso_id = pp.id';
    		$criteria->distinct =true;
    		$criteria->select='t.*';
    		$criteria->condition='pp.id = '.Yii::app()->session['idPeriodo'].' AND t.estado = 1 AND t.tipo_producto_id='.$tipoproducto;
            $criteria->order = 'orden ASC';           
    	}else{
    		$criteria->condition='t.id=0';
    	}
    	 
    	$productosestrategicos = ProductosEstrategicos::model()->findAll($criteria);
    
    	return $productosestrategicos;
    }

}
