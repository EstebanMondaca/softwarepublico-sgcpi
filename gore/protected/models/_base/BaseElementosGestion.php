<?php

/**
 * This is the model base class for the table "elementos_gestion".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ElementosGestion".
 *
 * Columns in table "elementos_gestion" available as properties of the model,
 * followed by relations of table "elementos_gestion" available as properties of the model.
 *
 * @property integer $id
 * @property integer $id_subcriterio
 * @property string $nombre
 * @property integer $estado
 * @property string $n_elementogestion
 *
 * @property Subcriterios $idSubcriterio
 * @property ElementosGestionPriorizados[] $elementosGestionPriorizadoses
 */
abstract class BaseElementosGestion extends GxActiveRecord {
	public $cantidad_elementos, $puntaje_revisado, $puntaje_actual, $can,$id_la;
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'elementos_gestion';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Elemento De Gestión|Elementos De Gestión', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(
			array('nombre, n_elementogestion', 'required'),
			array('id_subcriterio, estado', 'numerical', 'integerOnly'=>true),
			array('nombre', 'length', 'max'=>500),
			array('n_elementogestion', 'length', 'max'=>2),
			array('estado', 'default', 'setOnEmpty' => true, 'value' => null),
			array('n_elementogestion', 'ext.UniqueAttributesValidator', 'with' => 'id_subcriterio',"message"=>"El Elemento de Gestion ya existe en el Subcriterio Seleccionado"),
			array('id, id_subcriterio, nombre, estado, n_elementogestion', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idSubcriterio' => array(self::BELONGS_TO, 'Subcriterios', 'id_subcriterio'),			
			'elementosGestionPriorizadoses' => array(self::HAS_MANY, 'ElementosGestionPriorizados', 'id_elemento_gestion'),
		    'laElemGestions' => array(self::HAS_MANY, 'LaElemGestion', 'id_elem_gestion','condition'=>'laElemGestions.estado=1 AND laElemGestions.id_planificacion ='.Yii::app()->session['idPlanificaciones']),
		    'laElemGestions2' => array(self::HAS_MANY, 'LaElemGestion', 'id_elem_gestion','condition'=>'laElemGestions2.id_la IS NOT NULL AND laElemGestions2.estado=1 AND laElemGestions2.id_planificacion ='.Yii::app()->session['idPlanificaciones']),		    
		    'elementosGestionResponsables' => array(self::HAS_MANY, 'ElementosGestionResponsable', 'elemento_gestion_id','condition'=>'elementosGestionResponsables.estado=1 AND elementosGestionResponsables.planificacion_id ='.Yii::app()->session['idPlanificaciones']),		            
        );
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'id_subcriterio' => null,
			'nombre' => Yii::t('app', 'Nombre'),
			'estado' => Yii::t('app', 'Estado'),
			'n_elementogestion' => Yii::t('app', 'Elemento de Gestión'),
			'idSubcriterio' => null,
			'elementosGestionPriorizadoses' => null,
			'elementosGestionResponsables'=>null,
			'laElemGestions' => null,
			//'responsable_id' => null,
            //'responsable' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('t.id', $this->id);
		$criteria->compare('t.id_subcriterio', $this->id_subcriterio);
		$criteria->compare('t.nombre', $this->nombre, true);
		$criteria->compare('t.estado', 1);
		$criteria->compare('t.n_elementogestion', $this->n_elementogestion, true);
        //$criteria->compare('t.responsable_id', $this->responsable_id);
		//$criteria->condition='t.estado = 1';
		$criteria->join='INNER JOIN subcriterios sc ON sc.id=t.id_subcriterio AND t.estado=1';
        
		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'pagination' => array('pageSize' => 30,)
		));
	}

    public function searchResponsable(){
        $criteria = new CDbCriteria;

        $criteria->compare('t.id', $this->id);
        $criteria->compare('t.id_subcriterio', $this->id_subcriterio);
        $criteria->compare('t.nombre', $this->nombre, true);
        $criteria->compare('t.estado', 1);
        $criteria->compare('t.n_elementogestion', $this->n_elementogestion, true);
        $filtro="";
        if(isset($_GET['idLA'])){
            $model=LineasAccion::model()->findByPK($_GET['idLA']);
            if (!is_null($model)) {
                $filtro=" AND egr.centro_costo_id=".$model->centro_costo_id." AND egr.responsable_id=".$model->id_responsable_implementacion;
            }            
        }
        $criteria->join='INNER JOIN subcriterios sc ON sc.id=t.id_subcriterio AND t.estado=1
                         INNER JOIN elementos_gestion_responsable egr ON egr.elemento_gestion_id=t.id '.$filtro.' AND egr.estado=1 AND egr.planificacion_id='.Yii::app()->session['idPlanificaciones'];
        
        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
    
    public function searchControl() {
        $criteria = new CDbCriteria;

        $criteria->compare('t.id', $this->id);
        $criteria->compare('t.id_subcriterio', $this->id_subcriterio);
        $criteria->compare('t.nombre', $this->nombre, true);
        $criteria->compare('t.estado', 1);
        $criteria->compare('t.n_elementogestion', $this->n_elementogestion, true); 
        // $criteria->compare('t.responsable_id', $this->responsable_id);      
        
       // $criteria->join='INNER JOIN subcriterios sc ON sc.id=t.id_subcriterio AND t.estado=1 INNER JOIN la_elem_gestion la on la.id_elem_gestion=t.id';
        $criteria->join='INNER JOIN subcriterios sc ON sc.id=t.id_subcriterio AND t.estado=1';
        $criteria->select='t.*';
        $criteria->distinct=true;        
        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,            
        ));
    }
    
    public function getUltimoPuntajeActual(){
        $puntajeActual=0;
        /*$indicadores = LaElemGestion::model()->findAll(array('condition'=>'t.id_elem_gestion='.$this->id.'  AND t.puntaje_revisado IS NOT NULL','order'=>'t.fecha DESC','select'=>'t.puntaje_revisado'));
        if($indicadores){
            $puntajeActual=$indicadores[0]->puntaje_revisado;
        }*/
        $puntaje=ElementosGestionResponsable::model()->findAll(array('condition'=>'t.elemento_gestion_id='.$this->id.' and t.planificacion_id='.Yii::app()->session['idPlanificaciones'].'  AND t.estado = 1','select'=>'t.puntaje_actual'));
        if(isset($puntaje[0])){
            $puntajeActual=$puntaje[0]->puntaje_actual;
        }
        return $puntajeActual;
    }

    public function getUltimoPuntajeRevisado(){
        $puntajeActual=0;
        $indicadores = LaElemGestion::model()->findAll(array('condition'=>'t.id_elem_gestion='.$this->id.' AND t.puntaje_revisado IS NOT NULL AND estado = 1 AND t.id_la IS NULL AND t.id_planificacion='.Yii::app()->session['idPlanificaciones'].'  AND estado = 1','order'=>'t.fecha DESC, t.id DESC','select'=>'t.puntaje_revisado'));
        if(isset($indicadores[0])){
            $puntajeActual=$indicadores[0]->puntaje_revisado;
        }
        return $puntajeActual;
    }
    
    public function getEstadoUltimoPuntajeRevisado(){
        $puntajeActual=null;
        $estadoPuntaje="Ok";
        $indicadores = LaElemGestion::model()->findAll(array('condition'=>'t.id_elem_gestion='.$this->id.' AND t.puntaje_revisado IS NULL AND t.id_la IS NULL AND estado = 1 AND t.id_planificacion='.Yii::app()->session['idPlanificaciones'],'order'=>'t.fecha DESC, t.id DESC','select'=>'t.puntaje_revisado'));
        if($indicadores){
            $estadoPuntaje="Pend.";
        }
        return $estadoPuntaje;
    }
    
    public function getPuntajeElemento(){
        return $this->idSubcriterio->puntaje_elemento;
    }
    
     public function getPuntajesActualPorSub($idSub){
     	
     	$criteria = new CDbCriteria;
     	$criteria->select='t.id, SUM(er.puntaje_actual) AS puntaje_actual';
     	$criteria->join = 'INNER JOIN elementos_gestion_responsable er ON er.elemento_gestion_id = t.id';
     	$criteria->condition = 't.estado = 1 AND er.estado=1 AND  t.id_subcriterio = '.$idSub.' AND er.planificacion_id='.Yii::app()->session['idPlanificaciones'];
     	
     	$puntajes = ElementosGestion::model()->findAll($criteria);
     	return $puntajes;
     }

    public function getArrayUltimaEvidenciaRevisadaInterna(){
        $a=array();
        $indicadores = LaElemGestion::model()->findAll(array('condition'=>'t.id_elem_gestion='.$this->id.' AND t.puntaje_revisado IS NOT NULL AND estado = 1 AND t.id_la IS NULL AND t.id_planificacion='.Yii::app()->session['idPlanificaciones'].'  AND estado = 1','order'=>'t.fecha DESC, t.id DESC'));
        if(isset($indicadores[0])){
            $a['puntaje']=$indicadores[0]->puntaje_revisado;
            $a['evidencia']=$indicadores[0]->evidencia;
            $a['documentos']=array();
            foreach($indicadores[0]->laElemGestionDoc as $v){
                $a['documentos'][]=$v->nombre;
            }
        }
        return $a;
    }
}
