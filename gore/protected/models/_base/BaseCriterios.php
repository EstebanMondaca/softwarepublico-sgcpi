<?php

/**
 * This is the model base class for the table "criterios".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Criterios".
 *
 * Columns in table "criterios" available as properties of the model,
 * followed by relations of table "criterios" available as properties of the model.
 *
 * @property integer $id
 * @property string $nombre
 * @property string $descripcion
 * @property integer $estado
 * @property integer $n_criterio
 *
 * @property Subcriterios[] $subcriterioses
 */
abstract class BaseCriterios extends GxActiveRecord {
	public $crt;
	public $sub, $id_sub, $id_eg, $elemento;
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'criterios';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Criterio|Criterios', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(
			array('nombre, descripcion, n_criterio', 'required'),
			array('estado, n_criterio', 'numerical', 'integerOnly'=>true),
			array('nombre', 'length', 'max'=>200),
			array('n_criterio', 'unique', "message"=>"El criterio ingresado ya existe"),
			array('estado', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, nombre, descripcion, estado, n_criterio', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
				'subcriterioses' => array(self::HAS_MANY, 'Subcriterios', 'id_criterio'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'nombre' => Yii::t('app', 'Nombre'),
			'descripcion' => Yii::t('app', 'Descripción'),
			'estado' => Yii::t('app', 'Estado'),
			'n_criterio' => Yii::t('app', 'Nº Criterio'),
			'subcriterioses' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('descripcion', $this->descripcion, true);
		$criteria->compare('estado', $this->estado);
		$criteria->compare('n_criterio', $this->n_criterio);
		$criteria->condition='t.estado = 1';

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}

	
	public function  datosResumenGeneralTablaElementos($id){
		$criteria = new CDbCriteria;
		$criteria->select = 't.nombre, eg.id AS id_eg, t.descripcion, sb.nombre AS sub, eg.nombre AS elemento';
		$criteria->join = 'INNER JOIN subcriterios sb ON sb.id_criterio = t.id
				INNER JOIN elementos_gestion eg ON eg.id_subcriterio = sb.id';
		$criteria->condition='eg.id='.$id.' AND sb.estado = 1 AND eg.estado = 1';
		$criteria->compare('t.estado', 1);
		$criteria->group='eg.id';
		$criterios = Criterios::model()->findAll($criteria);
		
		return $criterios;
	}
	
}