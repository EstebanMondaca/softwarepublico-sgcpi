<?php

/**
 * This is the model base class for the table "subproductos".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Subproductos".
 *
 * Columns in table "subproductos" available as properties of the model,
 * followed by relations of table "subproductos" available as properties of the model.
 *
 * @property integer $id
 * @property integer $centro_costo_id
 * @property integer $producto_estrategico_id
 * @property string $nombre
 * @property string $descripcion
 * @property integer $estado
 *
 * @property ProductosEspecificos[] $productosEspecificoses
 * @property CentrosCostos $centroCosto
 * @property ProductosEstrategicos $productoEstrategico
 */
abstract class BaseSubproductos extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'subproductos';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Subproductos|Subproductos', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(
			array('nombre, descripcion,centro_costo_id', 'required'),
			array('centro_costo_id, producto_estrategico_id, estado', 'numerical', 'integerOnly'=>true),
			array('nombre', 'length', 'max'=>200),
			array('centro_costo_id, producto_estrategico_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, centro_costo_id, producto_estrategico_id, nombre, descripcion, estado', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'productosEspecificoses' => array(self::HAS_MANY, 'ProductosEspecificos', 'subproducto_id','condition'=>'productosEspecificoses.estado=1'),
			'centroCosto' => array(self::BELONGS_TO, 'CentrosCostos', 'centro_costo_id'),
			'productoEstrategico' => array(self::BELONGS_TO, 'ProductosEstrategicos', 'producto_estrategico_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'centro_costo_id' => null,
			'producto_estrategico_id' => null,
			'nombre' => Yii::t('app', 'Subproducto'),
			'descripcion' => Yii::t('app', 'Descripción'),
			'estado' => Yii::t('app', 'Estado'),
			'productosEspecificoses' => 'Productos Específicos',
			'centroCosto' => 'Centro de costo',
			'productoEstrategico' => 'Producto Estratégico',
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('centro_costo_id', $this->centro_costo_id);
		$criteria->compare('producto_estrategico_id', $this->producto_estrategico_id);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('descripcion', $this->descripcion, true);
		$criteria->compare('estado', $this->estado);
        if(isset(Yii::app()->session['idPeriodo'])){
            $criteria->join='inner join  productos_estrategicos pe on t.producto_estrategico_id=pe.id
                INNER JOIN objetivos_productos op ON pe.id = op.producto_estrategico_id
                INNER JOIN objetivos_estrategicos oe ON op.objetivo_estrategico_id = oe.id
                INNER JOIN desafios_objetivos do2 ON  oe.id = do2.objetivo_estrategico_id
                INNER JOIN desafios_estrategicos de ON do2.desafio_estrategico_id = de.id
                INNER JOIN planificaciones pl ON de.planificacion_id = pl.id 
                INNER JOIN periodos_procesos pp ON pl.periodo_proceso_id = pp.id';
            $criteria->distinct =true;
            $criteria->select='t.*';
            if(isset($_GET['id'])){
                $criteria->condition='pp.id = '.Yii::app()->session['idPeriodo'].' AND t.estado = 1 AND t.producto_estrategico_id='.$_GET['id'];
            }else{
                $criteria->condition='pp.id = '.Yii::app()->session['idPeriodo'].' AND t.estado = 1';
            }
        }else{
            $criteria->condition='t.id=0';
        }
		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
	
    public static function subproductosPorProductoEstrategico($idPE){
    	
    	
    	$criteria = new CDbCriteria;
        $criteria->select = 't.*';
        $criteria->condition = 't.estado = 1 AND t.producto_estrategico_id ='.$idPE;
        $subProductos = Subproductos::model()->findAll($criteria);
        
        return $subProductos;
    	
    	
    }
    
    public function subproductosxproductoestrategico($id_productoestrategico) {
    	$criteria = new CDbCriteria;
    
    	$criteria->compare('id', $this->id);
    	$criteria->compare('centro_costo_id', $this->centro_costo_id);
    	$criteria->compare('producto_estrategico_id', $this->producto_estrategico_id);
    	$criteria->compare('nombre', $this->nombre, true);
    	$criteria->compare('descripcion', $this->descripcion, true);
    	$criteria->compare('estado', $this->estado);
    	if(isset(Yii::app()->session['idPeriodo'])){
    		$criteria->join='inner join  productos_estrategicos pe on t.producto_estrategico_id=pe.id
                INNER JOIN objetivos_productos op ON pe.id = op.producto_estrategico_id
                INNER JOIN objetivos_estrategicos oe ON op.objetivo_estrategico_id = oe.id
                INNER JOIN desafios_objetivos do2 ON  oe.id = do2.objetivo_estrategico_id
                INNER JOIN desafios_estrategicos de ON do2.desafio_estrategico_id = de.id
                INNER JOIN planificaciones pl ON de.planificacion_id = pl.id
                INNER JOIN periodos_procesos pp ON pl.periodo_proceso_id = pp.id';
    		$criteria->distinct =true;
    		$criteria->select='t.*';
    		$criteria->condition='pp.id = '.Yii::app()->session['idPeriodo'].' AND t.estado = 1 AND t.producto_estrategico_id='.$id_productoestrategico;
    	}else{
    		$criteria->condition='t.id=0';
    	}
    	
    	$subProductos = Subproductos::model()->findAll($criteria);
        
        return $subProductos;
    }
}
