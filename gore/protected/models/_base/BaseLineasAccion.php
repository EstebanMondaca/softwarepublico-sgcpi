<?php

/**
 * This is the model base class for the table "lineas_accion".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "LineasAccion".
 *
 * Columns in table "lineas_accion" available as properties of the model,
 * followed by relations of table "lineas_accion" available as properties of the model.
 *
 * @property integer $id
 * @property integer $id_tipo_la
 * @property string $nombre
 * @property string $descripcion
 * @property integer $id_centro_responsabilidad
 * @property integer $id_responsable_implementacion
 * @property integer $id_responsable_mantencion
 * @property integer $id_indicador
 * @property integer $estado
 *
 * @property Users[] $users
 * @property LaElemGestion[] $laElemGestions
 * @property Users $idResponsableMantencion
 * @property CentrosCostos $idCentroResponsabilidad
 * @property Indicadores $idIndicador
 * @property TiposLa $idTipoLa
 * @property Users $idResponsableImplementacion
 */
abstract class BaseLineasAccion extends GxActiveRecord {
	public $indicador,$descripcion, $responsable_id,$ponderacion,$formula, $supuestos, $notas,$estrategico, $elemento, $id_indicador, $value, $meta_anual, $cumplimiento, $cumple, $medio_verificacion, $r_implementacion, $r_mantencion, $puntaje_actual, $puntaje_esperado;
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'lineas_accion';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Definición de Líneas de Acción y AMI|Definición de Líneas de Acción y AMI', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(
			array('id_tipo_la, nombre, descripcion, centro_costo_id,producto_estrategico_id, id_responsable_implementacion, id_responsable_mantencion, id_indicador, estado', 'required'),
			array('id_tipo_la, centro_costo_id,producto_estrategico_id, id_responsable_implementacion, id_responsable_mantencion, id_indicador, estado', 'numerical', 'integerOnly'=>true),
			array('nombre', 'length', 'max'=>300),
			array('id, id_tipo_la, nombre, descripcion, centro_costo_id,producto_estrategico_id, id_responsable_implementacion, id_responsable_mantencion, id_indicador, estado', 'safe', 'on'=>'search'),
		    array('centro_costo_id,id', 'checkCentroCostoPorLA','message'=>'El centro de costo no puede ser modificado. Usted debe eliminar la asociación con los elementos de gestión existentes asociados a un centro de costo distinto al seleccionado.'),
        );
	}

	public function relations() {
		return array(
			'users' => array(self::MANY_MANY, 'User', 'la_actores(id_la, id_usuario)'),
            'laElemGestions' => array(self::HAS_MANY, 'LaElemGestion', 'id_la'),
            'idIndicador' => array(self::BELONGS_TO, 'Indicadores', 'id_indicador'),
            'idTipoLa' => array(self::BELONGS_TO, 'TiposLa', 'id_tipo_la'),
            'productoEstrategico' => array(self::BELONGS_TO, 'ProductosEstrategicos', 'producto_estrategico_id'),
            'centroCosto' => array(self::BELONGS_TO, 'CentrosCostos', 'centro_costo_id'),
            'idResponsableImplementacion' => array(self::BELONGS_TO, 'User', 'id_responsable_implementacion'),
            'idResponsableMantencion' => array(self::BELONGS_TO, 'User', 'id_responsable_mantencion'),
		);
	}

	public function pivotModels() {
		return array(
			'users' => 'LaActores',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'id_tipo_la' => Yii::t('app', 'Tipo'),
			'nombre' => Yii::t('app', 'Nombre LA o AMI'),
			'descripcion' => Yii::t('app', 'Descripción breve'),
			'centro_costo_id' => null,
			'producto_estrategico_id' => Yii::t('app', 'Producto estratégico'),			
			'id_responsable_implementacion' => Yii::t('app', 'Responsable Implementación'),
			'id_responsable_mantencion' => Yii::t('app', 'Responsable Mantención'),
			'id_indicador' => 'Información de Cumplimiento asociada a un Indicador',
			'estado' => Yii::t('app', 'Estado'),
			'users' => Yii::t('app', 'Actores Internos'),
			'laElemGestions' => null,
			'centroCosto' => null,
            'productoEstrategico' => Yii::t('app', 'Producto estratégico'),
			'idResponsableMantencion' => Yii::t('app', 'Responsable Mantención'),
			'idCentroResponsabilidad' => null,
			'idIndicador' => 'Información de Cumplimiento asociada a un Indicador',
			'idTipoLa' => Yii::t('app', 'Tipo'),
			'idResponsableImplementacion' => Yii::t('app', 'Responsable Implementación'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
        $criteria->compare('id_tipo_la', $this->id_tipo_la);
        $criteria->compare('nombre', $this->nombre, true);
        $criteria->compare('descripcion', $this->descripcion, true);
        $criteria->compare('id_responsable_implementacion', $this->id_responsable_implementacion);
        $criteria->compare('id_responsable_mantencion', $this->id_responsable_mantencion);
        $criteria->compare('id_indicador', $this->id_indicador);
        $criteria->compare('producto_estrategico_id', $this->producto_estrategico_id);
        $criteria->compare('centro_costo_id', $this->centro_costo_id);
        $criteria->compare('estado', 1); 
        if(isset(Yii::app()->session['idPeriodo'])){
            $criteria->join='
                    INNER JOIN productos_estrategicos pe on t.producto_estrategico_id=pe.id                    
                    INNER JOIN objetivos_productos op ON pe.id = op.producto_estrategico_id
                    INNER JOIN objetivos_estrategicos oe ON op.objetivo_estrategico_id = oe.id
                    INNER JOIN desafios_objetivos do2 ON  oe.id = do2.objetivo_estrategico_id
                    INNER JOIN desafios_estrategicos de ON do2.desafio_estrategico_id = de.id
                    INNER JOIN planificaciones pl ON de.planificacion_id = pl.id 
                    INNER JOIN periodos_procesos pp ON pl.periodo_proceso_id = pp.id';
            $criteria->distinct =true;
            $criteria->select='t.*';            
            $criteria->condition='pp.id = '.Yii::app()->session['idPeriodo'].' AND t.estado = 1';
            
        }else{
            $criteria->condition='t.id=0';
        }
		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
	
	public function busquedaPersonalizadaReportecdc($id_division){
		$criteria = new CDbCriteria;

		$criteria->with=array(
			'idIndicador',
			'idIndicador.indicadoresInstrumentoses',
		   	'idIndicador.tipoFormula',
			'idIndicador.frecuenciaControl',
			'centroCosto.division',
			'productoEstrategico.objetivosEstrategicoses.desafiosEstrategicoses.planificacion.periodoProceso'
		
		);
		
		$criteria->select = 'idIndicador.id AS id_indicador, idIndicador.medio_verificacion AS medio_verificacion,
		idIndicador.meta_anual AS meta_anual,division.nombre AS division,division.id AS division_id,
		idIndicador.nombre AS indicador,t.*';

     
		$criteria->condition='t.estado = 1 AND tipoFormula.estado = 1
        AND division.estado = 1 AND tipoFormula.estado = 1 AND indicadoresInstrumentoses.id_instrumento =2';
   
 		if(isset(Yii::app()->session['idPeriodo'])){

			$criteria->addCondition('periodoProceso.id = '.Yii::app()->session['idPeriodo']);
		 
        }
        if($id_division!=0){
        	$criteria->compare('division.id', $id_division);
        }
        $criteria->order='t.id';
        
        $indicadores = LineasAccion::model()->findAll($criteria);
        
        return $indicadores;
		
	}
	
	public function busquedaAmiReporte($bandera){
		
		$join = '';
		$criteria = new CDbCriteria;
		
		$criteria->select='t.nombre, t.id, u.nombres AS r_implementacion , u2.nombres AS r_mantencion';
		$join='INNER JOIN users u ON t.id_responsable_implementacion = u.id
		INNER JOIN users u2 ON t.id_responsable_implementacion = u2.id ';
		$criteria->condition='t.estado = 1 AND u.status = 1 AND u2.status = 1';
		
		if(isset(Yii::app()->session['idPeriodo'])){
			        
			$join=$join.'INNER JOIN productos_estrategicos pre ON t.producto_estrategico_id = pre.id
			INNER JOIN objetivos_productos op ON pre.id= op.producto_estrategico_id
			INNER JOIN objetivos_estrategicos oe ON op.objetivo_estrategico_id = oe.id
			INNER JOIN desafios_objetivos do2 ON do2.objetivo_estrategico_id = oe.id
			INNER JOIN desafios_estrategicos de ON do2.desafio_estrategico_id = de.id
			INNER JOIN planificaciones pl ON de.planificacion_id = pl.id
			INNER JOIN periodos_procesos pp ON pl.periodo_proceso_id = pp.id';
			$criteria->addCondition('pp.id = '.Yii::app()->session['idPeriodo']);
        }
		$criteria->join = $join;
		
		if($bandera==0){
			$criteria->compare('t.id_tipo_la', 1);
		}else{
			
			if($bandera==1){
				$criteria->compare('t.id_tipo_la', 2);
			}
			
		}
		$criteria->group='t.id';
		
		
		
        return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
         
  
	}
	
	public function unaAmiDetalles($id, $idTipo){
		
		$join = '';
		$criteria = new CDbCriteria;
		$criteria->select='i.medio_verificacion AS medio_verificacion, i.responsable_id,t.nombre, t.id, concat(i.meta_anual, " ",uni.nombre) AS meta_anual,
		 u.nombres AS r_implementacion , u2.nombres AS r_mantencion, t.descripcion, t.id_tipo_la, t.id_indicador, i.nombre AS indicador';
		
		$join='INNER JOIN users u ON t.id_responsable_implementacion = u.id
		INNER JOIN users u2 ON t.id_responsable_implementacion = u2.id
		INNER JOIN indicadores i ON t.id_indicador = i.id 
		INNER JOIN unidades uni ON i.unidad_id = uni.id';
		$criteria->condition='t.estado = 1 AND u.status = 1 AND u2.status = 1';
		
	    if(isset(Yii::app()->session['idPeriodo'])){
            $join=$join.'
                    INNER JOIN productos_estrategicos pe on t.producto_estrategico_id=pe.id                    
                    INNER JOIN objetivos_productos op ON pe.id = op.producto_estrategico_id
                    INNER JOIN objetivos_estrategicos oe ON op.objetivo_estrategico_id = oe.id
                    INNER JOIN desafios_objetivos do2 ON  oe.id = do2.objetivo_estrategico_id
                    INNER JOIN desafios_estrategicos de ON do2.desafio_estrategico_id = de.id
                    INNER JOIN planificaciones pl ON de.planificacion_id = pl.id 
                    INNER JOIN periodos_procesos pp ON pl.periodo_proceso_id = pp.id';     
            $criteria->addCondition('pp.id = '.Yii::app()->session['idPeriodo'].' AND t.estado = 1');
            
        }
		$criteria->join = $join;
		if($id!=0){
			$criteria->compare('t.id', $id);

		}else{//si la id es cero
			if($idTipo !=0){
				$criteria->compare('id_tipo_la', $idTipo);
			}
		}
		$criteria->group='t.id';
        $ami = LineasAccion::model()->findAll($criteria);
        
        return $ami;
	}
	
	public function busquedaReporteAMILA() {
		$criteria = new CDbCriteria;
        if(isset(Yii::app()->session['idPeriodo'])){
            $criteria->join='
                    INNER JOIN productos_estrategicos pe on t.producto_estrategico_id=pe.id                    
                    INNER JOIN objetivos_productos op ON pe.id = op.producto_estrategico_id
                    INNER JOIN objetivos_estrategicos oe ON op.objetivo_estrategico_id = oe.id
                    INNER JOIN desafios_objetivos do2 ON  oe.id = do2.objetivo_estrategico_id
                    INNER JOIN desafios_estrategicos de ON do2.desafio_estrategico_id = de.id
                    INNER JOIN planificaciones pl ON de.planificacion_id = pl.id 
                    INNER JOIN periodos_procesos pp ON pl.periodo_proceso_id = pp.id';  
            $criteria->select='t.*';      
            $criteria->condition='pp.id = '.Yii::app()->session['idPeriodo'].' AND t.estado = 1';
            
        }
        $criteria->compare('t.id', $this->id);
        $criteria->compare('t.id_tipo_la', $this->id_tipo_la);
        $criteria->compare('t.nombre', $this->nombre, true);
        $criteria->compare('t.descripcion', $this->descripcion, true);
        $criteria->compare('t.id_responsable_implementacion', $this->id_responsable_implementacion);
        $criteria->compare('t.id_responsable_mantencion', $this->id_responsable_mantencion);
        $criteria->compare('t.id_indicador', $this->id_indicador);
        $criteria->compare('t.producto_estrategico_id', $this->producto_estrategico_id);
        $criteria->compare('t.centro_costo_id', $this->centro_costo_id);
        $criteria->compare('t.estado', 1);
        $criteria->group='id'; 
      
		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
	
	public function lineasIndicador($id){
		
		$criteria = new CDbCriteria;
		$criteria->select='t.nombre, i.id AS id_indicador, i.descripcion AS indicador, u.nombres AS r_implementacion, concat(i.meta_anual, " ",uni.nombre) AS meta_anual,
		i.medio_verificacion AS medio_verificacion, t.descripcion';
		$criteria->join='INNER JOIN users u ON t.id_responsable_implementacion = u.id
		INNER JOIN indicadores i ON t.id_indicador = i.id
		INNER JOIN unidades uni ON i.unidad_id = uni.id';
		$criteria->compare('t.id', $id);
		
		$lineas = LineasAccion::model()->findAll($criteria);
		
		return $lineas;
		
	}
    
    public function checkCentroCostoPorLA($attribute,$params){        
        $centroCostoNoOcupadoPorLA=true;        
        if(isset($this->id)){
            $centroCosto=$this->centro_costo_id;
            $idLA=$this->id;
            $planificacion=Yii::app()->session['idPlanificaciones'];
            $laElemGestion=LaElemGestion::model()->findAll(array('condition'=>'estado=1 AND id_la IS NOT NULL AND id_la=\''.$idLA.'\' AND id_planificacion=\''.$planificacion.'\''));
            if($laElemGestion){
                foreach($laElemGestion as $value){
                    if($value->idLa->centroCosto->id!=$centroCosto){
                        $centroCostoNoOcupadoPorLA=false;
                        if(!$this->hasErrors("centro_costo_id"))
                            $this->addError("centro_costo_id", $params['message']);
                    }
                }
            }
        }else{
            return $centroCostoNoOcupadoPorLA;
        }
   }
	
}
