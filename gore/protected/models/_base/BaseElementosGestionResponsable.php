<?php

/**
 * This is the model base class for the table "elementos_gestion_responsable".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ElementosGestionResponsable".
 *
 * Columns in table "elementos_gestion_responsable" available as properties of the model,
 * followed by relations of table "elementos_gestion_responsable" available as properties of the model.
 *
 * @property integer $id
 * @property integer $elemento_gestion_id
 * @property integer $planificacion_id
 * @property integer $responsable_id
 * @property integer $centro_costo_id
 * @property integer $estado
 *
 * @property Users $responsable
 * @property ElementosGestion $elementoGestion
 * @property Planificaciones $planificacion
 */
abstract class BaseElementosGestionResponsable extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'elementos_gestion_responsable';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ElementosGestionResponsable|ElementosGestionResponsables', $n);
	}

	public static function representingColumn() {
		return 'id';
	}

	public function rules() {
		return array(
			array('elemento_gestion_id, planificacion_id, responsable_id, centro_costo_id', 'required'),
			array('elemento_gestion_id, planificacion_id, responsable_id, centro_costo_id, estado, puntaje_actual', 'numerical', 'integerOnly'=>true),
			array('estado, puntaje_actual', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, elemento_gestion_id, planificacion_id, centro_costo_id, responsable_id, estado, puntaje_actual', 'safe', 'on'=>'search'),
		    array('centro_costo_id,elemento_gestion_id,planificacion_id', 'checkCentroCostoPorLA','message'=>'El centro de costo no puede ser modificado. Usted debe eliminar la asociación de las lineas de acción y los elementos de gestión existentes para un centro de costo distinto al seleccionado.'),
		    array('responsable_id,elemento_gestion_id,planificacion_id', 'checkResponsablePorLA','message'=>'El responsable no puede ser modificado. Usted debe eliminar desde el mantenedor de lineas de acción todos los elementos de gestión que esten asociados con el responsable actual.'),
        );
	}

	public function relations() {
		return array(
		    'centroCosto' => array(self::BELONGS_TO, 'CentrosCostos', 'centro_costo_id'),
			'responsable' => array(self::BELONGS_TO, 'User', 'responsable_id'),
			'elementoGestion' => array(self::BELONGS_TO, 'ElementosGestion', 'elemento_gestion_id'),
			'planificacion' => array(self::BELONGS_TO, 'Planificaciones', 'planificacion_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'elemento_gestion_id' => null,
			'planificacion_id' => null,
			'responsable_id' => null,
			'estado' => Yii::t('app', 'Estado'),
			'responsable' => null,
			'centroCosto'=>null,
			'centro_costo_id' => null,
			'elementoGestion' => null,
			'planificacion' => null,
			'puntaje_actual' => Yii::t('app', 'Puntaje Actual'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('elemento_gestion_id', $this->elemento_gestion_id);
		$criteria->compare('planificacion_id', $this->planificacion_id);
		$criteria->compare('responsable_id', $this->responsable_id);
		$criteria->compare('estado', 1);
        $criteria->compare('centro_costo_id', $this->centro_costo_id); 
        $criteria->compare('puntaje_actual', $this->puntaje_actual); 

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
	
	public function getPuntajeActual($data, $row){
		$criteria = new CDbCriteria;
		$criteria->select = 't.puntaje_actual';		
		if($row != -1){
			$criteria->condition = 't.elemento_gestion_id='.$data->id.' AND t.estado = 1 AND t.planificacion_id = '.Yii::app()->session['idPlanificaciones'];
		}else{
			$criteria->condition = 't.elemento_gestion_id='.$data.' AND t.estado = 1 AND t.planificacion_id = '.Yii::app()->session['idPlanificaciones'];
		}
		$puntaje_actual = ElementosGestionResponsable::model()->findAll($criteria);
		
		return $puntaje_actual[0]['puntaje_actual'];
	}
    
    
    public function checkResponsablePorLA($attribute,$params){
        $responsable=$this->responsable_id;
        $existeAsociacionUsuarioLA=false;
        $saveOk=true;
        if(isset($this->elemento_gestion_id) && isset($this->planificacion_id)){
            $elementoGestion=$this->elemento_gestion_id;
            $planificacion=$this->planificacion_id;
            $laElemGestion=LaElemGestion::model()->findAll(array('condition'=>'estado=1 AND id_la IS NOT NULL AND id_elem_gestion=\''.$elementoGestion.'\' AND id_planificacion=\''.$planificacion.'\''));
            if($laElemGestion){
                foreach($laElemGestion as $value){
                    //foreach($value->idLa->users as $v){
                        //$responsableNoOcupadoPorLA=false;
                        if($value->idLa->id_responsable_implementacion==$responsable || $value->idLa->id_responsable_mantencion==$responsable){
                            $existeAsociacionUsuarioLA=true;                            
                        }else{
                            $saveOk=false;
                        }
                    //}                    
                }
            }
        }
        
        if(!$saveOk && !$existeAsociacionUsuarioLA){
            if(!$this->hasErrors("responsable_id"))
                $this->addError("responsable_id", $params['message']);
        }else{
            $saveOk=true;
        }
                
        
        return $saveOk;
   }
    
    public function checkCentroCostoPorLA($attribute,$params){
        $centroCosto=$this->centro_costo_id;
        $centroCostoOcupadoPorLA=false;
        //$existeAsociacionUsuarioLA=false;
        $saveOk=true;
        if(isset($this->elemento_gestion_id) && isset($this->planificacion_id)){
            $elementoGestion=$this->elemento_gestion_id;
            $planificacion=$this->planificacion_id;
            $laElemGestion=LaElemGestion::model()->findAll(array('condition'=>'estado=1 AND id_la IS NOT NULL AND id_elem_gestion=\''.$elementoGestion.'\' AND id_planificacion=\''.$planificacion.'\''));
            if($laElemGestion){
                foreach($laElemGestion as $value){
                    if(isset($value->idElemGestion)){
                        if(isset($value->idElemGestion->elementosGestionResponsables)){
                            foreach($value->idElemGestion->elementosGestionResponsables as $val){
                                    if($val->centro_costo_id==$centroCosto){
                                        $centroCostoOcupadoPorLA=true;
                                    }else{
                                        $saveOk=false;
                                    }
                            }
                        }
                    }                  
                }
            }
        }
        
        if(!$saveOk && !$centroCostoOcupadoPorLA){
            if(!$this->hasErrors("centro_costo_id"))
                $this->addError("centro_costo_id", $params['message']);
        }else{
            $saveOk=true;
        }
                
        
        return $saveOk;

        
   }
}