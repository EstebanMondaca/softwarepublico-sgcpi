<?php

/**
 * This is the model base class for the table "subcriterios".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Subcriterios".
 *
 * Columns in table "subcriterios" available as properties of the model,
 * followed by relations of table "subcriterios" available as properties of the model.
 *
 * @property integer $id
 * @property integer $id_criterio
 * @property string $nombre
 * @property string $descripcion
 * @property integer $cantidad_elementos
 * @property double $factor
 * @property double $puntaje_elemento
 * @property integer $estado
 * @property integer $n_subcriterio
 *
 * @property ElementosGestion[] $elementosGestions
 * @property Criterios $idCriterio
 */
abstract class BaseSubcriterios extends GxActiveRecord {
	public $su, $f, $criterio;
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'subcriterios';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Subcriterio|Subcriterios', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(
			array('nombre, cantidad_elementos, factor, puntaje_elemento, n_subcriterio', 'required'),
			array('id_criterio, cantidad_elementos, estado, n_subcriterio', 'numerical', 'integerOnly'=>true),
			array('factor, puntaje_elemento', 'numerical'),
			array('nombre', 'length', 'max'=>200),
			array('n_subcriterio', 'ext.UniqueAttributesValidator', 'with' => 'id_criterio',"message"=>"El Nº Subcriterio ya existe en el Criterio Seleccionado"),
			array('estado', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, id_criterio, nombre, descripcion, cantidad_elementos, factor, puntaje_elemento, estado, n_subcriterio', 'safe', 'on'=>'search'),
		);
	}
	
	public function relations() {
		return array(
			'elementosGestions' => array(self::HAS_MANY, 'ElementosGestion', 'id_subcriterio'),
			'idCriterio' => array(self::BELONGS_TO, 'Criterios', 'id_criterio'),
			//'centroCosto' => array(self::BELONGS_TO, 'CentrosCostos', 'centro_costo_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'id_criterio' => null,
			'nombre' => Yii::t('app', 'Subcriterio'),
			'descripcion' => Yii::t('app', 'Descripción'),
			'cantidad_elementos' => Yii::t('app', 'Nº Elementos Gestión'),
			'factor' => Yii::t('app', 'Factor Subcriterio'),
			'puntaje_elemento' => Yii::t('app', 'Variación por Punto del Subcriterio'),
			'estado' => Yii::t('app', 'Estado'),
			'n_subcriterio' => Yii::t('app', 'Nº'),
			'elementosGestions' => null,
			'idCriterio' => null,
			//'centro_costo_id' => null,
            //'centroCosto' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;
		
		$criteria->compare('id', $this->id);
		$criteria->compare('id_criterio', $this->id_criterio);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('descripcion', $this->descripcion, true);
		$criteria->compare('cantidad_elementos', $this->cantidad_elementos);
		$criteria->compare('factor', $this->factor);
		$criteria->compare('puntaje_elemento', $this->puntaje_elemento);
		$criteria->compare('t.estado', $this->estado);
		$criteria->compare('n_subcriterio', $this->n_subcriterio);
        //$criteria->compare('centro_costo_id', $this->centro_costo_id);
		$criteria->join='INNER JOIN criterios c ON c.id=t.id_criterio AND t.estado=1';

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
	
	public function getDatosResumenGeneral($id){
		
		$sql ='SELECT SUM( AA.puntaje_revisado ) AS puntaje_revisado, AA.factor, AA.id_subcriterio, AA.id_criterio
		FROM (
		SELECT a.fecha, a.id_elem_gestion, a.puntaje_revisado, b.id_subcriterio, c.factor, c.id_criterio
		FROM (  
		        SELECT ax.* FROM(
		        SELECT la.id_elem_gestion, la.puntaje_revisado,la.fecha
        		FROM(
        		      SELECT MAX(a.fecha) as fecha,a.id_elem_gestion
                		FROM la_elem_gestion a
                		WHERE a.puntaje_revisado IS NOT NULL
                		AND a.fecha IS NOT NULL AND a.id_la IS NULL
                		AND a.estado =1
                		AND a.id_planificacion ='.Yii::app()->session['idPlanificaciones'].'
                		GROUP BY a.id_elem_gestion) latmp
        		join la_elem_gestion la on latmp.id_elem_gestion=la.id_elem_gestion AND latmp.fecha=la.fecha and la.puntaje_revisado IS NOT NULL
                                AND la.fecha IS NOT NULL
                                AND la.id_la IS NULL
                                AND la.estado = 1
                                AND la.id_planificacion = '.Yii::app()->session['idPlanificaciones'].'      		
        		order by la.id_elem_gestion,la.id DESC
        		) ax
        		group by ax.id_elem_gestion
                
        ) a
		INNER JOIN elementos_gestion b
		on a.id_elem_gestion=b.id
		INNER JOIN subcriterios c
		on b.id_subcriterio=c.id
		)AA';
		if($id!=0){//si se debe buscar por id de subcriterio
			$sql = $sql.' WHERE AA.id_subcriterio='.$id;	
		}
		$sql=$sql.' group by AA.id_subcriterio, AA.id_criterio';
		
		
		$criteriosSub=Yii::app()->db->createCommand($sql)->queryAll();
        //echo $sql;
        //exit();
		return $criteriosSub;
		
	}
	

}