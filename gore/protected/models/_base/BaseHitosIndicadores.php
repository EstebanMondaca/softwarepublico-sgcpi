<?php

/**
 * This is the model base class for the table "hitos_indicadores".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "HitosIndicadores".
 *
 * Columns in table "hitos_indicadores" available as properties of the model,
 * followed by relations of table "hitos_indicadores" available as properties of the model.
 *
 * @property integer $id
 * @property string $mes
 * @property integer $meta_parcial
 * @property integer $meta_reportada
 * @property integer $id_indicador
 * @property string $conceptoa
 * @property string $conceptob
 * @property string $conceptoc
 * @property string $evidencia
 * @property integer $estado
 *
 * @property Indicadores $idIndicador
 */
abstract class BaseHitosIndicadores extends GxActiveRecord {
	
	public $fecha_h;
	public $documentoActividad;
	public $documentoIndicador;

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'hitos_indicadores';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Hitos Indicadores|Hitos Indicadores', $n);
	}

	public static function representingColumn() {
		return 'mes';
	}

	public function rules() {
		return array(
			array('documentoActividad', 'file', 'types'=>'pdf'),
			array('documentoIndicador', 'file', 'types'=>'pdf'),
			array('mes, id_indicador', 'required'),
			array('meta_parcial, meta_reportada, id_indicador, estado', 'numerical', 'integerOnly'=>true),
			array('mes', 'length', 'max'=>12),
			array('conceptoa, conceptob, conceptoc', 'length', 'max'=>200),
			array('evidencia,evidencia_actividad', 'length', 'max'=>300),
			array('meta_parcial, meta_reportada, conceptoa, conceptob, conceptoc, evidencia,evidencia_actividad, estado', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, mes, meta_parcial, meta_reportada, id_indicador, conceptoa, conceptob, conceptoc, evidencia,evidencia_actividad, estado', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idIndicador' => array(self::BELONGS_TO, 'Indicadores', 'id_indicador'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'mes' => Yii::t('app', 'Mes'),
			'meta_parcial' => Yii::t('app', 'Meta Parcial'),
			'meta_reportada' => Yii::t('app', 'Meta Reportada'),
			'id_indicador' => null,
			'conceptoa' => Yii::t('app', 'Conceptoa'),
			'conceptob' => Yii::t('app', 'Conceptob'),
			'conceptoc' => Yii::t('app', 'Conceptoc'),
			'evidencia' => Yii::t('app', 'Evidencia'),
			'evidencia_actividad'=> Yii::t('app', 'Evidencia Actividad'),
			'estado' => Yii::t('app', 'Estado'),
			'idIndicador' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('mes', $this->mes, true);
		$criteria->compare('meta_parcial', $this->meta_parcial);
		$criteria->compare('meta_reportada', $this->meta_reportada);
		$criteria->compare('id_indicador', $this->id_indicador);
		$criteria->compare('conceptoa', $this->conceptoa, true);
		$criteria->compare('conceptob', $this->conceptob, true);
		$criteria->compare('conceptoc', $this->conceptoc, true);
		$criteria->compare('evidencia', $this->evidencia, true);
		$criteria->compare('evidencia_actividad', $this->evidencia_actividad, true);
		$criteria->compare('estado', $this->estado);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
	
    public function ultimoHitoIndicador($id){
    	
    	
    	$criteria=new CDbCriteria;

		$criteria->select='fecha, mes, conceptoa, conceptob, conceptoc, meta_parcial, meta_reportada';
		$criteria->compare('id_indicador', $id);

		$indicadores=HitosIndicadores::model()->findAll($criteria);
		
		return $indicadores;
		
    	
    }

	
}
