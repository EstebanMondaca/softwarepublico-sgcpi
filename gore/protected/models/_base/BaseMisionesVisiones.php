<?php

/**
 * This is the model base class for the table "misiones_visiones".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MisionesVisiones".
 *
 * Columns in table "misiones_visiones" available as properties of the model,
 * followed by relations of table "misiones_visiones" available as properties of the model.
 *
 * @property integer $id
 * @property string $nombre
 * @property string $descripcion
 *
 * @property Planificaciones[] $planificaciones
 */
abstract class BaseMisionesVisiones extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'misiones_visiones';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Misiones Visiones|Misiones Visiones', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(		    
			array('nombre', 'length', 'max'=>255),
			array('descripcion', 'safe'),
			array('nombre, descripcion', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, nombre, descripcion', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'planificacion' => array(self::BELONGS_TO, 'Planificaciones', 'planificacion_id')
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'nombre' => Yii::t('app', 'Nombre'),
			'descripcion' => Yii::t('app', 'Descripcion'),
			'planificaciones' => null,
			'planificacion_id' => null,
            'planificacion' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('descripcion', $this->descripcion, true);
        $criteria->compare('planificacion_id', $this->planificacion_id);     
        
		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
	
	public function buscarMisionporPeriodo() {
		
		$criteria = new CDbCriteria;
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('descripcion', $this->descripcion, true);
		$criteria->compare('planificacion_id', $this->planificacion_id);
		if(isset(Yii::app()->session['idPeriodo'])){
		$criteria->join="inner join planificaciones p On t.planificacion_id = p.id
				inner join periodos_procesos pp on p.periodo_proceso_id = pp.id";
		$criteria->distinct =true;
		$criteria->select='t.*';
		$criteria->condition='pp.id = '.Yii::app()->session['idPeriodo'];
		}else{
			$criteria->condition='t.id=0';
		}
		
		$misionperiodo=MisionesVisiones::model()->findAll($criteria);
		
		return $misionperiodo;
	}
}